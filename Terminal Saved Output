Last login: Tue Nov 21 11:40:34 on ttys000
[MacBookPro:~ bentolima$ python
Python 2.7.11 (default, Mar  8 2016, 15:35:41) 
[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> import os
>>> os.getcwd()
'/Users/bentolima'
>>> exit()
[MacBookPro:~ bentolima$ cd ..
[MacBookPro:Users bentolima$ ls
Shared		bentolima
[MacBookPro:Users bentolima$ cd bentolima/
[MacBookPro:~ bentolima$ ls
Applications		IdeaProjects		Pictures
Desktop			Library			Public
Documents		Movies			PycharmProjects
Downloads		Music			Samsung
Git_exercise		NetBeansProjects
[MacBookPro:~ bentolima$ cd PycharmProjects/
[MacBookPro:PycharmProjects bentolima$ ls
LPTHW		bacon.txt	hello.txt	mysite
[MacBookPro:PycharmProjects bentolima$ python
Python 2.7.11 (default, Mar  8 2016, 15:35:41) 
[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> hellocontent = bacon.read()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'bacon' is not defined
>>> hellofile= open(bacon.txt)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'bacon' is not defined
>>> getcwd()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'getcwd' is not defined
>>> exit()
[MacBookPro:PycharmProjects bentolima$ ls
LPTHW		bacon.txt	hello.txt	mysite
[MacBookPro:PycharmProjects bentolima$ open bacon.txt
[MacBookPro:PycharmProjects bentolima$ python
Python 2.7.11 (default, Mar  8 2016, 15:35:41) 
[GCC 4.2.1 Compatible Apple LLVM 7.0.2 (clang-700.1.81)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> os.getcwd()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'os' is not defined
>>> os.getcwd()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'os' is not defined
>>> import os
>>> os.getcwd()
'/Users/bentolima/PycharmProjects'
>>> hellofile = open(bacon.txt)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'bacon' is not defined
>>> hellofile = open('/Users/bentolima/PycharmProjects/bacon.txt')
>>> hellocontent = read('bacon.txt')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'read' is not defined
>>> hellocontent = hellofile.read()
>>> hellocontent
'hellodick\nBacon is not a vegetable.'
>>> hellocontent = hellofile.readlines()
>>> hellocontent
[]
>>> hellocontent = read('bacon.txt')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'read' is not defined
>>> hellocontent = hellofile.read()
>>> hellocontent
''
>>> hellofile = os.open('hello.txt')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: function takes at least 2 arguments (1 given)
>>> hellofile = open('/Users/bentolima/PycharmProjects/hello.txt')
>>> hellocontent  = hellofile.readlines()
>>> hello.close()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'hello' is not defined
>>> hellocontent
["Make sure to replace your_home_folder with your computer username. For example, my username is asweigart, so I\xe2\x80\x99d enter 'C:\\\\Users\\\\asweigart\\\\ hello.txt' on Windows.\rBoth these commands will open the  le in \xe2\x80\x9creading plaintext\xe2\x80\x9d mode, or read mode for short. When a  le is opened in read mode, Python lets you only read data from the  le; you can\xe2\x80\x99t write or modify it in any way. Read mode is the default mode for  les you open in Python. But if you don\xe2\x80\x99t want to rely on Python\xe2\x80\x99s defaults, you can explicitly specify the mode by passing the string value 'r' as a second argument to open(). So open('/Users/asweigart/ hello.txt', 'r') and open('/Users/asweigart/hello.txt') do the same thing.\rThe call to open() returns a File object. A File object repres"]
>>> baconfile.write('pau no cu','a')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'baconfile' is not defined
>>> baconfile=open('bacon.txt','w')
>>> baconfile.write('pau no cu \n','a')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: function takes exactly 1 argument (2 given)
>>> baconfile.write('pau no cu')
>>> baconfile.close()
>>> baconfile = open('bacon.txt','a')
>>> baconfile.write('bacon is not a vegetable')
>>> baconfile
<open file 'bacon.txt', mode 'a' at 0x1008b9150>
>>> baconfile.close()
>>> baconfile= open('bacon.txt')
>>> content = baconfile.read()
>>> baconfile.close()
>>> content
'pau no cubacon is not a vegetable'
>>> print(content)
pau no cubacon is not a vegetable
>>> import shelve
>>> shelvefile = shelve.open('mydata')
>>> cats = ['john','reggy','whiskers']
>>> shelvefile['cats']=cats
>>> shelvefile.close()
>>> shelvefile = shelve.open('mydata')
>>> list(shelvefile.keys())
['cats']
>>> list(shelvefile.values())
[['john', 'reggy', 'whiskers']]
>>> shelvefile.close()
>>> import pprint
>>> cats = [{'name':'zophie','desc':'chubby'},{'name':'pooka','desc':fluffy}]
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'fluffy' is not defined
>>> cats = [{'name':'zophie','desc':'chubby'},{'name':'pooka','desc':'fluffy'}]
>>> pprint.pformat(cats)
"[{'desc': 'chubby', 'name': 'zophie'}, {'desc': 'fluffy', 'name': 'pooka'}]"
>>> fileObj=open('mycats.py','w')
>>> fileObj.write('cats= '+pprint.pformat(cats)+'\n')
>>> fileobj.close()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'fileobj' is not defined
>>> fileObj.close()
>>> 
